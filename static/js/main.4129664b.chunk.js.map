{"version":3,"sources":["api-services/fetch-api.jsx","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App.jsx","reportWebVitals.js","index.js"],"names":["BASE_URL","API_KEY","Searchbar","onSubmit","useState","searchItem","setSearchItem","handleSubmit","e","preventDefault","trim","toast","error","icon","style","fill","backgroundColor","className","type","onClick","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","id","item","webformatURL","tag","src","alt","ImageGallery","searchResult","onSelect","map","itemId","uuidv4","Button","onBtnClick","Modal","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","target","App","status","setStatus","page","setPage","setSearchResult","setError","selectedImage","setSelectedImage","selectedImageTag","setSelectedImageTag","fetch","fetchItems","then","response","ok","json","Promise","reject","Error","data","hits","totalHits","length","success","prevState","scrollDown","catch","scrollTo","top","document","documentElement","scrollHeight","behavior","showBtn","PER_PAGE","searchQuery","position","color","height","width","message","largeImageURL","tags","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4129664b.chunk.js","sourcesContent":["// import axios from 'axios';\n\n// axios.defaults.baseURL = 'https://pixabay.com/api/';\n// const API_KEY = '22569115-02a432c6c1c62bbb3a59801b7';\n// const PER_PAGE = 12;\n\n// export const fetchItems = async (searchItem, page = 1) => {\n//   const response = await axios.get(\n//     `?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n//   );\n//   return response;\n// };\n\n// Через обычный фетч, без axios\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '22569115-02a432c6c1c62bbb3a59801b7';\nexport const PER_PAGE = 12;\n\nexport const fetchItems = (searchItem, page = 1) => {\n  return fetch(\n    `${BASE_URL}?q=${searchItem}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${PER_PAGE}`,\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { FaQuestionCircle } from 'react-icons/fa';\n\nexport const Searchbar = ({ onSubmit }) => {\n  const [searchItem, setSearchItem] = useState('');\n\n  // Считываю результат поиска\n  const handleFormChange = e => {\n    setSearchItem('');\n    setSearchItem(e.currentTarget.value.toLowerCase());\n  };\n\n  // Передаю результат поиска\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchItem.trim() === '') {\n      toast.error(\n        'empty field',\n        {\n          icon: <FaQuestionCircle style={{ fill: '#3f51b5' }} />,\n        },\n        {\n          style: {\n            backgroundColor: '#e3d120f2',\n          },\n        },\n      );\n      return;\n    }\n    onSubmit(searchItem);\n    setSearchItem('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button\n          type=\"submit\"\n          className=\"SearchForm-button\"\n          onClick={handleSubmit}\n        >\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          value={searchItem}\n          onChange={handleFormChange}\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nexport const ImageGalleryItem = ({ id, item, onClick }) => {\n  const { webformatURL, tag } = item;\n  // console.log(item);\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        id={id}\n        src={webformatURL}\n        alt={tag}\n        onClick={onClick}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.string,\n  item: PropTypes.objectOf(PropTypes.any),\n  onClick: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\n\nexport const ImageGallery = ({ searchResult, onSelect }) => {\n  return (\n    <section>\n      <ul className=\"ImageGallery\">\n        {searchResult.map(item => {\n          const itemId = uuidv4();\n\n          return (\n            <ImageGalleryItem\n              key={itemId}\n              item={item}\n              onClick={() => onSelect(item)}\n            />\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nImageGallery.propTypes = {\n  onSelect: PropTypes.func,\n  searchResult: PropTypes.arrayOf(PropTypes.object),\n};\n","import PropTypes from 'prop-types';\n\nexport const Button = ({ onBtnClick }) => {\n  return (\n    <div className=\"btn_wrapper\">\n      <button type=\"button\" className=\"Button\" onClick={onBtnClick}>\n        Load more\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onBtnClick: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\n\nexport const Modal = ({ src, tag, onClose }) => {\n  useEffect(() => {\n    // Вешаю слушателя\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      // Снимаю слуашателя\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  // Метод закрытия модального окна по кнопке Esc\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  // Метод закрытия модального окна по бекдропу\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={tag} />\n      </div>\n    </div>\n  );\n};\n\nModal.propTypes = {\n  onClose: PropTypes.func,\n  src: PropTypes.string,\n  tag: PropTypes.string,\n};\n","import { useState, useEffect } from 'react';\nimport { fetchItems, PER_PAGE } from '../api-services/fetch-api';\nimport { Searchbar } from './Searchbar';\nimport { ImageGallery } from './ImageGallery';\nimport { Button } from './Button/Button';\nimport { Modal } from './Modal';\n\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n// Уведомления Тостер\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const App = () => {\n  const [status, setStatus] = useState('idle');\n  const [page, setPage] = useState(1);\n  const [searchItem, setSearchItem] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [selectedImageTag, setSelectedImageTag] = useState(null);\n\n  useEffect(() => {\n    // отмена первого фетча\n    if (searchItem === '') {\n      return;\n    }\n    setStatus('pending');\n    // setPage(1);\n\n    fetchItems(searchItem, page)\n      .then(response => {\n        if (response.ok) {\n          return response.json();\n        }\n\n        toast.error('something went wrong');\n        return Promise.reject(\n          new Error(`search '${searchItem}' returned with error`),\n        );\n      })\n      .then(data => {\n        const { hits, totalHits } = data;\n\n        // Фетч по поиску\n        if (page === 1 && hits.length !== 0 && searchItem !== '') {\n          toast.success(`${totalHits} images found`);\n          setSearchResult(hits);\n          setStatus('resolved');\n          return;\n\n          // Фетч по нажатию на кнопку Load more\n        } else if (page > 1 && hits.length !== 0) {\n          toast.success(`more images found`);\n          setSearchResult(prevState => [...prevState, ...hits]);\n          setStatus('resolved');\n          scrollDown();\n          return;\n        }\n        // Если отрицательный результат поиска\n        toast.error('no images');\n        setSearchResult([]);\n        setSearchItem('');\n        setPage(1);\n        setStatus('idle');\n      })\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n\n    return;\n  }, [searchItem, page]);\n\n  // Передаю в стейт текст поиска\n  const handleFormSubmit = searchQuery => {\n    setSearchItem(searchQuery);\n    setPage(1);\n  };\n\n  // Передаю в стейт информацию для модального окна\n  const handleSelectItem = item => {\n    setSelectedImage(item.largeImageURL);\n    setSelectedImageTag(item.tags);\n  };\n  // Метод закрытия модального окна\n  const handleModalClose = () => {\n    setSelectedImage(null);\n  };\n\n  // Загружаю больше изображений\n  const handleBtnClick = () => {\n    if (searchResult.length !== 0) {\n      setPage(prevState => prevState + 1);\n    }\n    return;\n  };\n\n  // Функция скролла\n  const scrollDown = () => {\n    return window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const showBtn = searchResult.length > PER_PAGE - 1 && status !== 'idle';\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <Toaster position=\"top-right\" />\n\n      {status === 'pending' && (\n        <div className=\"loader_wrapper\">\n          <Loader\n            type=\"TailSpin\"\n            color=\"#3f51b5\"\n            height={60}\n            width={60}\n            className=\"Loader\"\n          />\n        </div>\n      )}\n\n      {status === 'rejected' && <h2 className=\"error\">{error.message}</h2>}\n\n      {status === 'resolved' && (\n        <div>\n          <ImageGallery\n            searchResult={searchResult}\n            onSelect={handleSelectItem}\n          />\n          {showBtn && <Button onBtnClick={handleBtnClick} />}\n\n          {selectedImage && (\n            <Modal\n              src={selectedImage}\n              tag={selectedImageTag}\n              onClose={handleModalClose}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}